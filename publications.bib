@inproceedings{MTMT:32836583,
	title = {C for Yourself: Comparison of Front-End Techniques for Formal Verification},
	author = {Bajczi, Levente and Ádám, Zsófia and Molnár, Vince},
	booktitle = {2022 IEEE/ACM 10th International Conference on Formal Methods in Software Engineering (FormaliSE)},
	doi = {10.1145/3524482.3527646},
	unique-id = {32836583},
	year = {2022},
	orcid-numbers = {Bajczi, Levente/0000-0002-6551-5860; Ádám, Zsófia/0000-0003-2354-1750; Molnár, Vince/0000-0002-8204-7595},
	abstract = {With the improvement of hardware and algorithms, the main challenge of software model checking has shifted from pure algorithmic performance toward supporting a wider set of input programs. Successful toolchains tackle the problem of parsing a wide range of inputs in an efficient way by reusing solutions from existing compiler technologies such as Eclipse CDT or LLVM. Our experience suggests that well-established techniques in compiler technology are not necessarily beneficial to model checkers and sometimes can even hurt their performance. In this paper, we review the tools mature enough to participate in the Software Verification Competition in terms of the employed analysis and frontend techniques. We find that successful tools do exhibit a bias toward certain combinations. We explore the theoretical reasons and suggest an adaptable approach for model checking frameworks. We validate our recommendations by implementing a new frontend for a model checking framework and show that it indeed benefits some of the algorithms.},

    url_pdf    = {https://leventebajczi.github.io/publications/formalise22.pdf},
    url_slides = {https://leventebajczi.github.io/publications/slides/formalise22.pdf},
	url_mtmt = {https://m2.mtmt.hu/api/publication/32836583},
}

@article{MTMT:30865515,
	title = {Will My Program Break on This Faulty Processor?. Formal Analysis of Hardware Fault Activations in Concurrent Embedded Software},
	author = {Bajczi, Levente and Vörös, András and Molnár, Vince},
	doi = {10.1145/3358238},
	journal-iso = {ACM T EMBED COMPUT S},
	journal = {ACM TRANSACTIONS ON EMBEDDED COMPUTING SYSTEMS},
	volume = {18},
	unique-id = {30865515},
	issn = {1539-9087},
	abstract = {Formal verification is approaching a point where it will be reliably applicable to embedded software. Even though formal verification can efficiently analyze multi-threaded applications, multi-core processors are often considered too dangerous to use in critical systems, despite the many benefits they can offer. One reason is the advanced memory consistency model of such CPUs. Nowadays, most software verifiers assume strict sequential consistency, which is also the naïve view of programmers. Modern multi-core processors, however, rarely guarantee this assumption by default. In addition, complex processor architectures may easily contain design faults. Thanks to the recent advances in hardware verification, these faults are increasingly visible and can be detected even in existing processors, giving an opportunity to compensate for the problem in software. In this paper, we propose a generic approach to consider inconsistent behavior of the hardware in the analysis of software. Our approach is based on formal methods and can be used to detect the activation of existing hardware faults on the application level and facilitate their mitigation in software. The approach relies heavily on recent results of model checking and hardware verification and offers new, integrative research directions. We propose a partial solution based on existing model checking tools to demonstrate feasibility and evaluate their performance in this context.},
	year = {2019},
	eissn = {1558-3465},
	orcid-numbers = {Bajczi, Levente/0000-0002-6551-5860; Molnár, Vince/0000-0002-8204-7595},

    url_pdf    = {https://leventebajczi.github.io/publications/emsoft19.pdf},
    url_slides = {https://leventebajczi.github.io/publications/slides/emsoft19.pdf},
	url_mtmt = {https://m2.mtmt.hu/api/publication/30865515},	
}

@article{MTMT:32801008,
	title = {Theta: portfolio of CEGAR-based analyses with dynamic algorithm selection (Competition Contribution)},
	author = {Ádám, Zsófia and Bajczi, Levente and Dobos-Kovács, Mihály and Hajdu, Ákos and Molnár, Vince},
	doi = {10.1007/978-3-030-99527-0_34},
	journal-iso = {LECT NOTES COMPUT SC},
	journal = {LECTURE NOTES IN COMPUTER SCIENCE},
	volume = {13244},
	unique-id = {32801008},
	issn = {0302-9743},
	keywords = {Computer Science, Software Engineering},
	year = {2022},
	eissn = {1611-3349},
	pages = {474-478},
	orcid-numbers = {Ádám, Zsófia/0000-0003-2354-1750; Bajczi, Levente/0000-0002-6551-5860; Dobos-Kovács, Mihály/0000-0002-0064-2965; Hajdu, Ákos/0000-0001-8001-8865; Molnár, Vince/0000-0002-8204-7595},
	abstract = {THETA is a model checking framework based on abstraction refinement algorithms. In SV-COMP 2022, we introduce: 1) reasoning at the source-level via a direct translation from C programs; 2) support for concurrent programs with interleaving semantics; 3) mitigation for non-progressing refinement loops; 4) support for SMT-LIB-compliant solvers. We combine all of the aforementioned techniques into a portfolio with dynamic algorithm selection.},

    url_pdf    = {https://leventebajczi.github.io/publications/tacas22.pdf},
    url_slides = {https://leventebajczi.github.io/publications/slides/tacas22.pdf},
    url_poster = {https://leventebajczi.github.io/publications/posters/tacas22.pdf},
	url_mtmt = {https://m2.mtmt.hu/api/publication/32801008},
}


@inproceedings{MTMT:34768972,
	title = {ConcurrentWitness2Test: Test-Harnessing the Power of Concurrency (Competition Contribution)},
	author = {Bajczi, Levente and Ádám, Zsófia and Micskei, Zoltán Imre},
	booktitle = {Tools and Algorithms for the Construction and Analysis of Systems},
	doi = {10.1007/978-3-031-57256-2_16},
	unique-id = {34768972},
	abstract = {ConcurrentWitness2Test is a violation witness validator for concurrent software. Taking both nondeterminism of data and interleaving-based nondeterminism into account, the tool aims to use the metadata described in the violation witnesses to synthesize an executable test harness. While plagued by some initial challenges yet to overcome, the validation performance of ConcurrentWitness2Test corroborates the usefulness of the proposed approach.},
	year = {2024},
	pages = {330-334},
	orcid-numbers = {Bajczi, Levente/0000-0002-6551-5860; Ádám, Zsófia/0000-0003-2354-1750; Micskei, Zoltán Imre/0000-0003-1846-261X},

    url_pdf    = {https://leventebajczi.github.io/publications/tacas24cwt.pdf},
    url_slides = {https://leventebajczi.github.io/publications/slides/tacas24cwt.pdf},
    url_mtmt = {https://m2.mtmt.hu/api/publication/34768972},
}

@inproceedings{MTMT:34768428,
	title = {Theta: Abstraction Based Techniques for Verifying Concurrency (Competition Contribution)},
	author = {Bajczi, Levente and Telbisz, Csanád and Somorjai, Márk and Ádám, Zsófia and Dobos-Kovács, Mihály and Szekeres, Dániel and Mondok, Milán and Molnár, Vince},
	booktitle = {Tools and Algorithms for the Construction and Analysis of Systems},
	doi = {10.1007/978-3-031-57256-2_30},
	unique-id = {34768428},
	abstract = {Theta is a model checking framework, with a strong emphasis on effectively handling concurrency in software using abstraction refinement algorithms. In SV-COMP 2024, we use 1) an abstraction-aware partial order reduction; 2) a dynamic statement reduction technique; and 3) enhanced support for call stacks to handle recursive programs. We integrate these techniques in an improved architecture with inherent support for portfolio-based verification using dynamic algorithm selection, with a diverse selection of supported SMT solvers as well. In this paper we detail the advances of Theta regarding concurrent and recursive software support.},
	year = {2024},
	pages = {412-417},
	orcid-numbers = {Bajczi, Levente/0000-0002-6551-5860; Telbisz, Csanád/0000-0002-6260-5908; Ádám, Zsófia/0000-0003-2354-1750; Dobos-Kovács, Mihály/0000-0002-0064-2965; Szekeres, Dániel/0000-0002-2912-028X; Mondok, Milán/0000-0001-5396-2172; Molnár, Vince/0000-0002-8204-7595},

    url_pdf    = {https://leventebajczi.github.io/publications/tacas24theta.pdf},
    url_slides = {https://leventebajczi.github.io/publications/slides/tacas24theta.pdf},
    url_mtmt = {https://m2.mtmt.hu/api/publication/34768428},
}

@inproceedings{MTMT:34768422,
	title = {EmergenTheta: Verification Beyond Abstraction Refinement (Competition Contribution)},
	author = {Bajczi, Levente and Szekeres, Dániel and Mondok, Milán and Ádám, Zsófia and Somorjai, Márk and Telbisz, Csanád and Dobos-Kovács, Mihály and Molnár, Vince},
	booktitle = {Tools and Algorithms for the Construction and Analysis of Systems},
	doi = {10.1007/978-3-031-57256-2_23},
	unique-id = {34768422},
	abstract = {Theta is a model checking framework conventionally based on abstraction refinement techniques. While abstraction is useful for a large number of verification problems, the over-reliance on the technique led to Theta being unable to meaningfully adapt. Identifying this problem in previous years of SV-COMP has led us to create EmergenTheta , a sandbox for the new approaches we want Theta to support. By differentiating between mature and emerging techniques, we can experiment more freely without hurting the reliability of the overall framework. In this paper we detail the development route to EmergenTheta , and its first debut on SV-COMP’24 in the ReachSafety category.},
	year = {2024},
	pages = {371-375},
	orcid-numbers = {Bajczi, Levente/0000-0002-6551-5860; Szekeres, Dániel/0000-0002-2912-028X; Mondok, Milán/0000-0001-5396-2172; Ádám, Zsófia/0000-0003-2354-1750; Telbisz, Csanád/0000-0002-6260-5908; Dobos-Kovács, Mihály/0000-0002-0064-2965; Molnár, Vince/0000-0002-8204-7595},

    url_pdf    = {https://leventebajczi.github.io/publications/tacas24etheta.pdf},
    url_slides = {https://leventebajczi.github.io/publications/slides/tacas24etheta.pdf},
    url_mtmt = {https://m2.mtmt.hu/api/publication/34768422},
}
